/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaiot;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author saliya
 */
public class SEIoT extends javax.swing.JFrame {

    private FirebaseDatabase DATABASE;
    private DatabaseReference REF;
    private Map<String, Object> USERS;

    /**
     * Creates new form SEIoT
     */
    public SEIoT() {
        initComponents();
        try {
            new FirebaseConfig().initFirebase();
        } catch (IOException | URISyntaxException e) {
        }
        DATABASE = FirebaseDatabase.getInstance();
        REF = DATABASE.getReference("message");
        USERS = new HashMap<>();
        readData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        s1 = new javax.swing.JToggleButton();
        ev = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("java SE IoT");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Exit");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, -1, -1));

        s1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/off.png"))); // NOI18N
        s1.setBorderPainted(false);
        s1.setContentAreaFilled(false);
        s1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s1.setRolloverEnabled(false);
        s1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/res/on.png"))); // NOI18N
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        getContentPane().add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 120, -1));

        ev.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ev.setForeground(new java.awt.Color(255, 255, 255));
        ev.setText(".");
        getContentPane().add(ev, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 290, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/backg.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 290));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed
        if (s1.isSelected()) {
            USERS.put("light", 1);
            REF.updateChildrenAsync(USERS);
        } else {
            USERS.put("light", 0);
            REF.updateChildrenAsync(USERS);
        }
    }//GEN-LAST:event_s1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SEIoT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new SEIoT().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ev;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton s1;
    // End of variables declaration//GEN-END:variables

    private void LogEvent(String Event) {
        ev.setText(Event);
    }

    void readData() {
        REF.child("light").addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                LogEvent("read back from firebase : " + ds.getValue().toString());
            }

            @Override
            public void onCancelled(DatabaseError de) {
                System.out.println(de.getCode());
            }
        });
    }

}
